# Based on https://github.com/docker/build-push-action

name: "Docker"

on:
  push:
    branches: ['main']
  release: # A GitHub release was published
    types: [published]
  workflow_dispatch: # A build was manually requested
  workflow_call: # Another pipeline called us
    secrets:
      DOCKER_TOKEN:
        required: true

env:
  DOCKER_NAMESPACE: matrixdotorg
  DOCKER_HUB_USER: dendritegithub
  GHCR_NAMESPACE: matrix-org
  PLATFORMS: linux/amd64,linux/arm64,linux/arm/v7

jobs:
  build-and-publish-image:
    name: Polylith image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      security-events: write # To upload Trivy sarif files
    outputs:
      newimage: ${{ steps.img.outputs.newimage }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Get release tag & build flags
        if: github.event_name == 'release' # Only for GitHub releases
        run: |
          echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
          echo "BUILD=$(git rev-parse --short HEAD || \"\")" >> $GITHUB_ENV
          BRANCH=$(git symbolic-ref --short HEAD | tr -d \/)
          [ ${BRANCH} == "main" ] && BRANCH=""
          echo "BRANCH=${BRANCH}" >> $GITHUB_ENV
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Containers
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build main polylith image
        if: github.ref_name == 'main'
        id: docker_build_polylith
        uses: docker/build-push-action@v3
        with:
          cache-from: type=gha
          cache-to: type=gha,mode=max
          context: .
          build-args: FLAGS=-X github.com/matrix-org/dendrite/internal.branch=${{ env.BRANCH }} -X github.com/matrix-org/dendrite/internal.build=${{ env.BUILD }}
          target: polylith
          platforms: ${{ env.PLATFORMS }}
          push: true
          tags: |
            ghcr.io/simon-boyer/dendrite:${{ github.ref_name }}
            ghcr.io/simon-boyer/dendrite:${{ github.sha }}

      # - name: Build main monolith image
      #   if: github.ref_name == 'main'
      #   id: docker_build_monolith
      #   uses: docker/build-push-action@v3
      #   with:
      #     cache-from: type=gha
      #     cache-to: type=gha,mode=max
      #     context: .
      #     build-args: FLAGS=-X github.com/matrix-org/dendrite/internal.branch=${{ env.BRANCH }} -X github.com/matrix-org/dendrite/internal.build=${{ env.BUILD }}
      #     target: monolith
      #     platforms: ${{ env.PLATFORMS }}
      #     push: true
      #     tags: |
      #       ghcr.io/simon-boyer/dendrite:${{ github.ref_name }}
      #       ghcr.io/simon-boyer/dendrite:${{ github.sha }}

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ghcr.io/simon-boyer/dendrite:${{ github.ref_name }}
          format: "sarif"
          output: "trivy-results.sarif"

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: "trivy-results.sarif"

      - name: get image digest
        id: img
        run: |
          docker pull ghcr.io/simon-boyer/dendrite:${{github.sha}}
          export IMG_OUTPUT=$(docker inspect --format='{{index .RepoDigests 0}}' ghcr.io/simon-boyer/dendrite:${{github.sha}})
          echo "newimage=$IMG_OUTPUT" >> $GITHUB_OUTPUT

  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    needs: build-and-publish-image
    environment:
      name: deploy
      url: https://matrix.mission.arctiq.codegameeat.com
    env:
      API_TOKEN_GITHUB: ${{ secrets.API_TOKEN_GITHUB }}
    steps:
      - run: "echo DIGEST: ${{ needs.build-and-publish-image.outputs.newimage }}"
      - name: Run kustomize to update images and push result to another repository
        # You may pin to the exact commit or the version.
        # uses: rusowyler/github-action-kustomize-and-push@300d4106cdcacb043e7f04695636ef6d191da012
        uses: rusowyler/github-action-kustomize-and-push@v1.1.0
        with:
          # The images (space separated) to edit using kustomize, for example: node:8.15.0 mysql=mariadb For more information run: kustomize edit set image -h
          kustomize-edit-images: "dendrite=${{ needs.build-and-publish-image.outputs.newimage }}"
          # Email for the git commit
          user-email: simon.boyer.1@ens.etsmtl.ca
          # [Optional] Name for the git commit. Defaults to the destination username/organization name
          repository-username: Simon-Boyer
          # Destination repository In https://github.com/kubernetes-sigs/kustomize is: kustomize
          repository-name: arctiq-mission-infra
          # [Optional] set target branch name for the destination repository. Defaults to "main"
          directory: apps/dendrite/base